{"version":3,"sources":["components/Nav.js","components/SuperHeroCard.js","components/Spinner.js","components/DisplayAllSuper.js","components/SuperheroShow.js","components/game/ComputerCard.js","components/game/PlayerCard.js","components/SuperHeroGame.js","App.js","index.js"],"names":["Nav","className","to","SuperHeroCard","id","name","image","publisher","src","alt","Spinner","type","color","height","width","timeout","filterSearch","superheros","search","filter","superhero","toLowerCase","includes","DisplayAllSuper","React","useState","setSuperheros","setSearch","useEffect","setTimeout","a","axios","get","data","console","log","placeholder","onInput","e","target","value","map","images","sm","biography","SuperheroShow","useParams","setSuperhero","isFlipped","setIsFlipped","onClick","style","backgroundImage","md","backgroundPosition","backgroundRepeat","powerstats","intelligence","strength","speed","durability","power","combat","fullName","firstAppearance","work","occupation","connections","groupAffiliation","relatives","ComputerCard","selection","PlayerCard","setSelection","setGameStarted","handleChoice","choice","currentTarget","innerText","split","randomIndexes","length","array","index","Math","floor","random","push","calculateRandomCard","superHeros","number","SuperHeroGame","player","computer","setSuperHeros","randomCardIndex","setRandomCardIndex","randomIndex","setRandomIndex","gameStarted","winner","setWinner","count","setCount","gameOver","setGameOver","cardsAdded","remainingCards","indexcount","localStorage","getItem","setItem","highscore","response","toUpperCase","slice","pop","hero","xs","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4306abb.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nfunction Nav() {\n  return (\n    <nav>\n      <div className='navbar'>\n        <Link to='/' className='link'>Home</Link>\n        <Link to='/game' className='link'>Test Your Knowledge</Link>\n\n      </div>\n    </nav>\n  )\n}\n\nexport default Nav","import { Link } from 'react-router-dom'\n\n\nfunction SuperHeroCard({ id, name, image, publisher }) {\n  return (\n    <div className={`card ${publisher}`}>\n      <Link to={`/${id}`} className='card-display'>\n        <h2>{name}</h2>\n        <img src={image} alt={name} />\n      </Link>\n    </div>\n  )\n}\n\nexport default SuperHeroCard","import React from 'react'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport Loader from 'react-loader-spinner'\n\nfunction Spinner() {\n  return (\n    <div className=\"Loading\">\n      <Loader type=\"TailSpin\" color=\"#ffd539\" height=\"100\" width=\"100\" timeout={3000}/>\n    </div>\n  )\n}\n\nexport default Spinner","import React from 'react'\nimport axios from 'axios'\nimport SuperHeroCard from './SuperHeroCard'\nimport Spinner from './Spinner'\n\nfunction filterSearch(superheros, search) {\n  return (superheros.filter(superhero => {\n    return (superhero.name.toLowerCase().includes(search.toLowerCase()))\n  }))\n}\nfunction DisplayAllSuper() {\n  const [superheros, setSuperheros] = React.useState(null)\n  const [search, setSearch] = React.useState('')\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await axios.get('https://akabab.github.io/superhero-api/api/all.json')\n        setSuperheros(data)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    setTimeout(getData, 1000)\n  }, [])\n\n  const handleInput = (e) => {\n    setSearch(e.target.value)\n  }\n  \n  return (\n    <div>\n      <div className='content'>\n        <input type='text' placeholder='Search' onInput={handleInput} />\n        <div className='all-cards'>\n          {superheros ? (\n            filterSearch(superheros, search).map(superhero => {\n              return <SuperHeroCard key={superhero.id} name={superhero.name} image={superhero.images.sm} publisher={superhero.biography.publisher} id={superhero.id} />\n            })\n          ) : (\n            <Spinner />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DisplayAllSuper","import React from 'react'\nimport axios from 'axios'\nimport { useParams } from 'react-router-dom'\nimport Spinner from './Spinner'\n\n\nfunction SuperheroShow() {\n  const { id } = useParams()\n  const [superhero, setSuperhero] = React.useState(null)\n  const [isFlipped, setIsFlipped] = React.useState(false)\n\n  React.useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(`https://cdn.jsdelivr.net/gh/akabab/superhero-api@0.3.0/api/id/${id}.json`)\n      setSuperhero(data)\n    }\n    setTimeout(getData, 1000)\n  }, [id])\n\n  const handleFlip = () => {\n    setIsFlipped(!isFlipped)\n  }\n\n  return (\n    <div className=\"content\">\n      {superhero ? (\n        <div className=\"superhero_container\">\n          <div className={`card_details ${isFlipped ? 'is-flipped' : ''}`} onClick={handleFlip}>\n            <div className='card_inner_details'>\n              <div className={`card_frontface ${superhero.biography.publisher}`} style={{\n                backgroundImage: `url(${superhero.images.md})`,\n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n              }}>\n                <small>(Click the card to see stats)</small>\n              </div>\n\n              <div className={`card_backface ${superhero.biography.publisher}`} style={{\n                backgroundImage: `url(${superhero.images.md})`,\n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n              }}>\n                <div className='back_stats'>\n                  <h4>STATS</h4>\n                  <p>Intelligence: {superhero.powerstats.intelligence}</p>\n                  <p>Strength: {superhero.powerstats.strength}</p>\n                  <p>Speed: {superhero.powerstats.speed}</p>\n                  <p>Durability: {superhero.powerstats.durability}</p>\n                  <p>Power: {superhero.powerstats.power}</p>\n                  <p>Combat: {superhero.powerstats.combat}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"details\">\n            <h1>{superhero.name}</h1>\n            <p><span className=\"full_name\">FULL NAME: </span>{superhero.biography.fullName}</p>\n\n            <div className=\"superhero_facts\">\n              <h3>General: </h3>\n              <p>First Appearance: {superhero.biography.firstAppearance}</p>\n              <p>Publisher: {superhero.biography.publisher}</p>\n              <p>Occupation: {superhero.work.occupation}</p>\n            </div>\n\n            <div className=\"superhero_facts\">\n              <h3>Connections: </h3>\n              <p>Group Affiliations: {superhero.connections.groupAffiliation}</p>\n              <p>Relatives: {superhero.connections.relatives}</p>\n\n            </div>\n\n          </div>\n       \n        </div>\n      ) : (\n\n        <Spinner />\n\n      )}\n\n\n    </div>\n  )\n}\n\n\nexport default SuperheroShow","export default function ComputerCard({ name, images, powerstats, biography, selection }) {\n  return (\n    <div className={`cardWithStats ${biography.publisher}`}>\n      <h2>{name}</h2>\n      <img src={images.sm} alt={name} />\n      <div className='stats'>\n        <p>Intelligence: {selection ? powerstats.intelligence : '??'}</p>\n        <p>Strength: {selection ? powerstats.strength : '??'}</p>\n        <p>Speed: {selection ? powerstats.speed : '??'}</p>\n        <p>Durability: {selection ? powerstats.durability : '??'}</p>\n        <p>Power: {selection ? powerstats.power : '??'}</p>\n        <p>Combat: {selection ? powerstats.combat : '??'}</p>\n      </div>\n    </div>\n  )\n}","export default function PlayerCard({ name, images, powerstats, biography, setSelection, setGameStarted, selection }) {\n  const handleChoice = (e) => {\n    const choice = e.currentTarget.innerText.split(':')\n    if (!selection) {\n      setSelection(choice[0].toLowerCase())\n      setGameStarted(true)\n    }\n  }\n\n  return (\n    <div className={`cardWithStats ${biography.publisher}`}>\n      <h2>{name}</h2>\n      <img src={images.sm} alt={name} />\n      <div className='stats'>\n        <p className='playerStats' onClick={handleChoice}>Intelligence: {powerstats.intelligence}</p>\n        <p className='playerStats' onClick={handleChoice}>Strength: {powerstats.strength}</p>\n        <p className='playerStats' onClick={handleChoice}>Speed: {powerstats.speed}</p>\n        <p className='playerStats' onClick={handleChoice}>Durability: {powerstats.durability}</p>\n        <p className='playerStats' onClick={handleChoice}>Power: {powerstats.power}</p>\n        <p className='playerStats' onClick={handleChoice}>Combat: {powerstats.combat}</p>\n      </div>\n    </div>\n  )\n}","import axios from 'axios'\nimport React from 'react'\nimport ComputerCard from './game/ComputerCard'\nimport PlayerCard from './game/PlayerCard'\nimport Spinner from './Spinner'\n\nfunction randomIndexes(length) {\n  const array = []\n  while (array.length < 3) {\n    const index = Math.floor(Math.random() * length)\n    if (!array.includes(index)) array.push(index)\n  }\n  return array\n}\n\nfunction calculateRandomCard(array, superHeros) {\n  const newNumber = false\n  while (!newNumber) {\n    const number = Math.floor(Math.random() * superHeros.length)\n    if (!array.includes(number)) return number\n  }\n}\n\nfunction claculateWinner(player, computer) {\n  if (player === computer) return 'Draw'\n  else if (player > computer) return 'Win'\n  else return 'Lose'\n}\n\nfunction SuperHeroGame() {\n  const [superHeros, setSuperHeros] = React.useState(null)\n  const [randomCardIndex, setRandomCardIndex] = React.useState([])\n  const [randomIndex, setRandomIndex] = React.useState(null)\n  const [gameStarted, setGameStarted] = React.useState(false)\n  const [selection, setSelection] = React.useState(null)\n  const [winner, setWinner] = React.useState(null)\n  const [count, setCount] = React.useState(0)\n  const [gameOver, setGameOver] = React.useState(false)\n\n  const cardsAdded = (randomCardIndex.length > 0)\n\n  if (randomCardIndex && !randomIndex && superHeros) {\n    setRandomIndex(calculateRandomCard(randomCardIndex, superHeros))\n  }\n\n  if (selection && gameStarted && !winner) {\n    setWinner(claculateWinner(superHeros[randomCardIndex[randomCardIndex.length - 1]].powerstats[selection], superHeros[randomIndex].powerstats[selection]))\n  }\n  const remainingCards = []\n\n  if (randomCardIndex) {\n    let indexcount = 0\n    while (remainingCards.length < randomCardIndex.length - 1) {\n      remainingCards.push(superHeros[randomCardIndex[indexcount]])\n      indexcount++\n    }\n  }\n  if (!localStorage.getItem('highscore')) localStorage.setItem('highscore', 0)\n  const highscore = localStorage.getItem('highscore')\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await axios.get('https://akabab.github.io/superhero-api/api/all.json')\n        setSuperHeros(response.data)\n        setRandomCardIndex(randomIndexes(response.data.length))\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    setTimeout(getData, 1000)\n  }, [])\n\n  const handleNewCard = () => {\n    if (winner === 'Lose') {\n      randomCardIndex.pop()\n      if (randomCardIndex.length === 0) {\n        setGameOver(true)\n        if (count > highscore) {\n          localStorage.setItem('highscore', count)\n        }\n      }\n      setRandomCardIndex(randomCardIndex)\n    } else if (winner === 'Win') {\n      setCount(count + 1)\n    }\n    if (winner !== 'Lose' && superHeros[randomCardIndex[randomCardIndex.length - 1]].powerstats[selection] === 100 && randomCardIndex.length !== 0) {\n      randomCardIndex[randomCardIndex.length - 1] = calculateRandomCard(randomCardIndex, superHeros)\n      setRandomCardIndex(randomCardIndex)\n    }\n    setRandomIndex(calculateRandomCard(randomCardIndex, superHeros))\n    setSelection(null)\n    setWinner(null)\n  }\n\n  const handlePlayAgain = () => {\n    setGameStarted(false)\n    setRandomCardIndex(randomIndexes(superHeros.length))\n    setSelection(false)\n    setCount(0)\n    setGameOver(false)\n  }\n\n  return (\n    <div className='content'>\n      {superHeros && cardsAdded ?\n        <div className='gameMain'>\n          <div className='cardsToCompare'>\n            {!gameOver && <div className='playerCard'><PlayerCard {...superHeros[randomCardIndex[randomCardIndex.length - 1]]} setSelection={setSelection} setGameStarted={setGameStarted} selection={selection} /></div>}\n\n            <div className='whoWin'>\n              <>\n                {!gameStarted &&\n                  <div className='instuctions'>\n                    <p > Select which stat you think is higher than the other card.<br /><br />You are given three random cards to see how far you can go.<br /> <br />If you select a stat that is 100 your card will be replaced so it isn&apos;t too easy.</p>\n                  </div>}\n              </>\n              {selection && !gameOver &&\n                <div className='winText'>\n                  <h3 className='resultText'>{winner}</h3>\n                  <hr />\n                  <h4>{selection[0].toUpperCase() + selection.slice(1)}</h4>\n                  <p>{superHeros[randomCardIndex[randomCardIndex.length - 1]].powerstats[selection]} VS {superHeros[randomIndex].powerstats[selection]}</p>\n                  <button onClick={handleNewCard}>Next Card</button>\n                </div>\n              }\n              <div className='results'>\n                <ul>\n                  <li className='scores'>Current Score: {count}</li>\n                  <li className='scores'>High Score: {highscore}</li>\n                </ul>\n              </div>\n              <div className='remaining'>\n                <h4>Remaining Cards:</h4>\n                <ul>\n                  {remainingCards.map(hero => {\n                    return <li key={hero.id}><span>{hero.name}:</span><img src={hero.images.xs} alt={hero.name} /></li>\n                  })}\n                </ul>\n              </div>\n            </div>\n\n            {!gameOver && <div className='computerCard'><ComputerCard {...superHeros[randomIndex]} selection={selection} /></div>}\n          </div>\n        </div>\n        : <>\n          { !gameOver && <Spinner /> }\n          {gameOver && <div className='gameOver'>\n            <h3 className= \"animate__animated animate__bounce\">Game Over!</h3>\n            <p className= \"animate__animated animate__bounce\">Final Score: {count}</p>\n            <button onClick={handlePlayAgain} className= \"animate__animated animate__bounce\">Play Again?</button>\n          </div>}\n        </>\n      }\n    </div >\n  )\n\n}\n\nexport default SuperHeroGame","import { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Nav from './components/Nav'\nimport DisplayAllSuper from './components/DisplayAllSuper'\nimport SuperheroShow from './components/SuperheroShow'\nimport SuperHeroGame from './components/SuperHeroGame'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Nav />\n      <Switch>\n        <Route exact path='/' component={DisplayAllSuper} />\n        <Route path='/game' component={SuperHeroGame} />\n        <Route path=\"/:id\" component={SuperheroShow} />\n      </Switch>\n    </BrowserRouter>\n  )\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}